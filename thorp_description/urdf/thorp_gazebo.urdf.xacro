<?xml version="1.0"?>
<robot name="thorp_gazebo" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Simulated Microsoft Kinect / ASUS Xtion PRO Live macros; included on their respective xacro files -->
  <xacro:macro name="thorp_sim_3dsensor" params="name depth_registration">  
    <gazebo reference="${name}_link">
      <sensor type="depth" name="${name}">
        <always_on>true</always_on>
        <update_rate>20.0</update_rate>
        <camera>
          <horizontal_fov>${60.0*M_PI/180.0}</horizontal_fov>
          <image>
            <format>B8G8R8</format>
            <width>640</width>
            <height>480</height>
          </image>
          <clip>
            <near>0.05</near>
            <far>8.0</far>
          </clip>
        </camera>
        <plugin name="kinect_camera_controller" filename="libgazebo_ros_openni_kinect.so">
          <cameraName>${name}</cameraName>
          <alwaysOn>true</alwaysOn>
          <updateRate>10</updateRate>
          <imageTopicName>rgb/image_raw</imageTopicName>
          <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
          <xacro:if value="${depth_registration}">  <!-- Normally for manipulation camera (Xtion) -->
            <depthImageTopicName>depth_registered/image_raw</depthImageTopicName>
            <pointCloudTopicName>depth_registered/points</pointCloudTopicName>
            <depthImageCameraInfoTopicName>depth_registered/camera_info</depthImageCameraInfoTopicName>
          </xacro:if>
          <xacro:unless value="${depth_registration}">  <!-- Normally for navigation camera (Kinect) -->
            <depthImageTopicName>depth/image_raw</depthImageTopicName>
            <pointCloudTopicName>depth/points</pointCloudTopicName>
            <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
          </xacro:unless>
          <frameName>${name}_rgb_optical_frame</frameName>  <!-- TODO confirm -->
          <baseline>0.1</baseline>
          <distortion_k1>0.0</distortion_k1>
          <distortion_k2>0.0</distortion_k2>
          <distortion_k3>0.0</distortion_k3>
          <distortion_t1>0.0</distortion_t1>
          <distortion_t2>0.0</distortion_t2>
          <pointCloudCutoff>0.45</pointCloudCutoff>
          <pointCloudCutoffMax>6.0</pointCloudCutoffMax>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

  <!-- Simulated Creative Senz3d camera  DISABLE by now as Gazebo2 cannot handle 3 instances of this plugin!  TODO: retry with Gazebo5
  <gazebo reference="senz3d_link">  
    <sensor type="depth" name="senz3d">
      <always_on>true</always_on>
      <update_rate>10.0</update_rate>
      <camera>
        <horizontal_fov>${74.0*M_PI/180.0}</horizontal_fov>
        <image>
          <format>B8G8R8</format>
          <width>320</width>
          <height>240</height>
        </image>
        <clip>
          <near>0.05</near>
          <far>1.5</far>
        </clip>
      </camera>
      <plugin name="kinect_camera_controller" filename="libgazebo_ros_openni_kinect.so">
        <cameraName>senz3d</cameraName>
        <alwaysOn>true</alwaysOn>
        <updateRate>10</updateRate>
        <imageTopicName>rgb/image_color</imageTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
        <frameName>senz3d_gazebo_optical_frame</frameName>
        <baseline>0.1</baseline>
        <distortion_k1>0.0</distortion_k1>
        <distortion_k2>0.0</distortion_k2>
        <distortion_k3>0.0</distortion_k3>
        <distortion_t1>0.0</distortion_t1>
        <distortion_t2>0.0</distortion_t2>
        <pointCloudCutoff>0.10</pointCloudCutoff>
        <pointCloudCutoffMax>1.0</pointCloudCutoffMax>
      </plugin>
    </sensor>

    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>   DISABLED -->

  <!-- LV-MaxSonar-EZ2 ultrasound sensors -->
  <xacro:macro name="LV_MaxSonar_EZ2_sim" params="name">  
    <gazebo reference="s_${name}_link">
      <sensor type="ray" name="s_${name}">
        <always_on>true</always_on>
        <update_rate>20</update_rate>
        <visualize>false</visualize>
        <ray>
          <scan>
            <horizontal>
              <samples>5</samples>
              <resolution>1</resolution>
              <min_angle>-0.3</min_angle>  <!-- -17 degree -->
              <max_angle>+0.3</max_angle>  <!-- +17 degree -->
            </horizontal>
            <vertical>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>-0.3</min_angle>  <!-- -17 degree -->
              <max_angle>+0.3</max_angle>  <!-- +17 degree -->
            </vertical>
          </scan>
          <range>
            <min>0.1</min>
            <max>6.0</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.05</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_s_${name}_controller" filename="libhector_gazebo_ros_sonar.so">
          <updateRate>20</updateRate>
          <gaussianNoise>0.05</gaussianNoise>
          <topicName>mobile_base/sensors/sonars/${name}</topicName>
          <frameId>s_${name}_link</frameId>
        </plugin>
      </sensor>

      <selfCollide>true</selfCollide>
      <gravity>true</gravity>
    </gazebo>
  </xacro:macro>

  <LV_MaxSonar_EZ2_sim name="m90"/>
  <LV_MaxSonar_EZ2_sim name="m72"/>
  <LV_MaxSonar_EZ2_sim name="m54"/>
  <LV_MaxSonar_EZ2_sim name="m36"/>
  <LV_MaxSonar_EZ2_sim name="m18"/>
  <LV_MaxSonar_EZ2_sim name="0"/>
  <LV_MaxSonar_EZ2_sim name="p18"/>
  <LV_MaxSonar_EZ2_sim name="p36"/>
  <LV_MaxSonar_EZ2_sim name="p54"/>
  <LV_MaxSonar_EZ2_sim name="p72"/>
  <LV_MaxSonar_EZ2_sim name="p90"/>
  
  <!-- Sharp GP2Y0A21 IR sensors -->
  <xacro:macro name="Sharp_GP2Y0A21_IR_sim" params="name">  
    <gazebo reference="ir_${name}_link">
      <sensor type="ray" name="ir_${name}">
        <always_on>true</always_on>
        <update_rate>20</update_rate>
        <visualize>false</visualize>
        <ray>
          <scan>
            <horizontal>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>-0.0436</min_angle>  <!-- -2.5 degree -->
              <max_angle>+0.0436</max_angle>  <!-- +2.5 degree -->
            </horizontal>
            <vertical>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>-0.0436</min_angle>  <!-- -2.5 degree -->
              <max_angle>+0.0436</max_angle>  <!-- +2.5 degree -->
            </vertical>
          </scan>
          <range>
            <min>0.01</min>
            <max>0.90</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_ir_${name}_controller" filename="libhector_gazebo_ros_sonar.so">
          <updateRate>20</updateRate>
          <gaussianNoise>0.01</gaussianNoise>
          <topicName>mobile_base/sensors/infrared/${name}</topicName>
          <frameId>ir_${name}_link</frameId>
        </plugin>
      </sensor>

      <selfCollide>true</selfCollide>
      <gravity>true</gravity>
    </gazebo>
  </xacro:macro>

  <Sharp_GP2Y0A21_IR_sim name="arm"/>
  <Sharp_GP2Y0A21_IR_sim name="l155"/>
  <Sharp_GP2Y0A21_IR_sim name="l180"/>
  <Sharp_GP2Y0A21_IR_sim name="r180"/>
  <Sharp_GP2Y0A21_IR_sim name="r155"/>

  <!-- Gazebo configuration for other structural parts -->
  <gazebo reference="arm_mount_link">
    <material>Gazebo/Black</material>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>

  <gazebo reference="sonars_mount_link">
    <material>Gazebo/Black</material>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>

  <gazebo reference="senz3d_mount_link">
    <material>Gazebo/Black</material>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>

  <gazebo reference="xtion_mount_link">
    <material>Gazebo/Black</material>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>

  <gazebo reference="opencm_link">
    <material>Gazebo/Black</material>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>

  <gazebo reference="cannon_link">
    <material>Gazebo/Black</material>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>

  <!-- Gazebo configuration for arm control -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so"/>
  </gazebo>

  <AX12_transmission name="arm_shoulder_pan"/>
  <AX12_transmission name="arm_shoulder_lift"/>
  <AX12_transmission name="arm_elbow_flex"/>
  <AX12_transmission name="arm_wrist_flex"/>
  <AX12_transmission name="gripper"/>

  <xacro:macro name="AX12_transmission" params="name">
    <transmission name="${name}_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${name}_joint">
        <hardwareInterface>PositionJointInterface</hardwareInterface>
      </joint>
      <actuator name="${name}_motor">
        <hardwareInterface>PositionJointInterface</hardwareInterface>
      </actuator>
    </transmission>
  </xacro:macro>
</robot>
