<!--
  Simulated version of Thorp's blocks manipulation demo using SMACH instead of C++ block_manipulation_demo node:
  - Full Thorp Gazebo simulation
  - Block manipulation stuff
  - Executive SMACH and visualization
 -->

<launch>
  <arg name="external_camera" default="false"/>

  <!--  ***** Simulated mobile manipulator Thorp ******  -->

  <include file="$(find thorp_simulation)/launch/thorp_gazebo.launch"/>


  <!--  *********** Object manipulation demo **********  -->

  <node name="object_detection_action_server" pkg="turtlebot_arm_object_manipulation"
        type="object_detection_action_server" output="screen">
  </node>

  <node name="object_pick_and_place_action_server" pkg="turtlebot_arm_object_manipulation"
        type="object_pick_and_place_action_server" output="screen">
    <param name="vertical_backlash" value="0.01"/>
  </node>
  
  <node name="object_interactive_manip_action_server" pkg="turtlebot_arm_object_manipulation"
        type="object_interactive_manip_action_server" output="screen">
  </node>
  
  <node name="object_information_server" pkg="object_recognition_ros"
        type="object_information_server" output="screen">
  </node>

  <!--  ****** Executive smach and visualization ******  -->

  <node name="object_manipulation_smach" pkg="thorp_smach" type="object_manip.py" output="screen" required="true">
    <param name="arm_link" value="arm_base_link"/>
  </node>

  <node name="object_manip_smach_viewer" pkg="smach_viewer" type="smach_viewer.py" output="screen"/>

  <!--  ******* Keyboard interaction with smach *******  -->
  <node name="object_manipulation_key_ctrl" pkg="thorp_smach" type="keyboard_ctrl.py" output="screen"/>
  <node name="object_manipulation_keyboard" pkg="keyboard" type="keyboard" output="screen">
    <param name="window_width" value="320"/>
    <param name="window_height" value="240"/>
    <param name="window_caption" value="Object manipulation user commands"/>
    <param name="shown_text" value="Available commands: &#10;  s:  start &#10;  r:  reset &#10;  f:  fold &#10;  q:  quit"/>
    <param name="text_font" value="/usr/share/fonts/truetype/freefont/FreeMono.ttf"/>
    <param name="font_size" value="22"/>
  </node>
  
  
  <!--  **************** ORK pipeline *****************  -->

  <include if="$(arg external_camera)" file="$(find thorp_obj_rec)/launch/includes/obj_rec.launch.xml" ns="tabletop">
    <arg name="as_server"    value="true"/>
    <arg name="config_file"  value="$(find thorp_obj_rec)/config/ork/external.tabletop.detection.ros.ork"/>
    <arg name="robot_frame"  value="base_footprint"/>
    <arg name="sensor_frame" value="external_camera_depth_optical_frame"/>
  </include>

  <include unless="$(arg external_camera)" file="$(find thorp_obj_rec)/launch/includes/obj_rec.launch.xml" ns="tabletop">
    <arg name="as_server"    value="true"/>
    <arg name="config_file"  value="$(find thorp_obj_rec)/config/ork/tabletop.detection.ros.ork"/>
    <arg name="robot_frame"  value="base_footprint"/>
    <arg name="sensor_frame" value="xtion_depth_optical_frame"/>
  </include>


  <!-- Run Rviz and load the default config to see the state of the move_group node and the object manipulation interactive markers -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find thorp_bringup)/rviz/view_manip.rviz"/>
</launch>
