<!--
  Thorp robot standalone:
  - turtlebot
  - 3d sensor
  - arduino interface
  - opencm interface
  - arm controllers
  - cannon controller
  - safety controller
  - auto-docking
 -->

<launch>
  <!--  *********** Turtlebot and 3d sensor ***********  -->
  <include file="$(find turtlebot_bringup)/launch/minimal.launch">
    <arg name="base"      value="kobuki"/>
    <arg name="stacks"    value="hexagons"/>
    <arg name="3d_sensor" value="kinect"/>
    <arg name="battery"   value="/sys/class/power_supply/BAT1"/>
  </include>
  <include file="$(find turtlebot_bringup)/launch/3dsensor.launch">
    <arg name="camera"                          value="kinect"/>
    <arg name="3d_sensor"                       value="kinect"/>
    <!-- We only need RGB images and pseudo laser scan -->
    <arg name="depth_registration"              value="false"/>
    <arg name="rgb_processing"                  value="true" />
    <arg name="ir_processing"                   value="false"/>
    <arg name="depth_processing"                value="false"/>
    <arg name="depth_registered_processing"     value="false"/>
    <arg name="disparity_processing"            value="false"/>
    <arg name="disparity_registered_processing" value="false"/>
    <arg name="scan_processing"                 value="true" />
  </include>

  <!-- Overwrite default Turtlebot 2 description with Thorp's one -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find thorp_description)/urdf/thorp.urdf.xacro' simulation:=false"/>
  <!--  Also increase the publishing frequency so the arm doesn't jump when moving -->
  <param name="robot_state_publisher/publish_frequency" value="20.0"/>

  <!--  *********** Thorp specific hardware ***********  -->
  <include file="$(find thorp_cannon)/launch/cannon.launch"/>
  <include file="$(find thorp_boards)/launch/opencm.launch"/>
  <include file="$(find thorp_boards)/launch/arduino.launch"/>
  <include file="$(find thorp_bringup)/launch/includes/arm.launch.xml"/>
  <include file="$(find thorp_bringup)/launch/includes/xtion.launch.xml"/>

  <!-- Reconfigure command velocity multiplexer to fit thorp_bringup needs. Just set the parameter doesn't work
       if we start the thorp_bringup rapp with app manager; we must explicitly call the reconfigure service -->
  <node pkg="rosservice" type="rosservice" name="reconfig_vel_mux" args="call --wait /cmd_vel_mux/set_parameters
            '{config:{strs:[[yaml_cfg_file,$(find thorp_bringup)/param/vel_multiplexer.yaml]]}}'"/>

  <!--  ******** Kobuki auto-docking controller *******  -->
  <include file="$(find thorp_bringup)/launch/includes/autodock.launch.xml"/>
</launch>
